.kafka-sink-cdc

==============================
Kafka Sink Change Data Capture
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecols

Change Data Capture Mode
------------------------

Change data capture (CDC) is an architecture that converts changes to
a database into event streams. The MongoDB Kafka sink connector can
process event streams using `Debezium <https://debezium.io/>`_ as an event
producer for the following source databases:

* `MongoDB <http://debezium.io/docs/connectors/mongodb/>`_
* `MySQL <http://debezium.io/docs/connectors/mysql/>`_
* `PostgreSQL <http://debezium.io/docs/connectors/postgresql/>`_

CDC Handler Configuration
-------------------------

You can configure the sink connector to process data from a CDC stream
using one of the included handlers for Debezium or a custom handler that
extends the abstract class `CdcHandler
<https://github.com/mongodb/mongo-kafka/blob/master/src/main/java/com/mongodb/kafka/connect/sink/cdc/CdcHandler.java>`_.

To create a CDC handler, specify the following configuration information:

- Full class name of the CDC handler in the
  ``change.data.capture.handler`` property. Once this configuration
  setting is specified, the connector will run in **CDC operation mode**.
- Topics on which the connector should listen for data in the ``topics``
  property.
- MongoDB collection to write data to in the ``collection`` property.
- The :doc:`converters </connectors/kafka-sink-data-formats>` required to
  handle data formats in the ``[key|value].converter`` properties. Both
  JSON + Schema and AVRO formats are supported.
- Any :doc:`post processors </connectors/kafka-sink-postprocessors>` necessary
  to modify the record before saving it to MongoDB.

The following sample JSON payload instantiates a new connector with
a specified CDC configuration when posted to the `Kafka Connect REST endpoint
<https://docs.confluent.io/current/connect/references/restapi.html>`_:

.. code-block:: json

   {
     "name": "mongo-sink-debezium-cdc",
     "config": {
       "connection.uri": "mongodb://mongodb:27017/kafkaconnect?w=1&journal=true",
       "topics": "myreplset.kafkaconnect.mongosrc",
       "change.data.capture.handler": "com.mongodb.kafka.connect.sink.cdc.debezium.mongodb.MongoDbHandler",
       "connector.class": "com.mongodb.kafka.connect.sink.MongoSinkConnector",
       "key.converter": "io.confluent.connect.avro.AvroConverter",
       "key.converter.schema.registry.url": "http://localhost:8081",
       "value.converter": "io.confluent.connect.avro.AvroConverter",
       "value.converter.schema.registry.url": "http://localhost:8081",
       "collection": "mongosink"
     }
   }
